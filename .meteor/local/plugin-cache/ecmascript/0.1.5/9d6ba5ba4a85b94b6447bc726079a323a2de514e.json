{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Template.portfolioList.onCreated(function () {\n  this.subscribe('portfolios');\n});\n\nTemplate.portfolioList.helpers({\n  portfolios: function () {\n\n    return Portfolios.find();\n  }\n});\n\nTemplate.portfolioList.events({\n  \"click .button-update\": function () {\n    return Portfolios.find();\n  }\n});\n\n/** PORTFOLIO Maintain*****/\n\n// TODO :: what should i do here ?\nvar PortfolioEntity = {\n  constructEntity: function (item) {\n    if (typeof item != \"undefined\" && item != null) {\n      item._id = item._id._str;\n      return item;\n    }\n    return { _id: '',\n      title: '',\n      client: '',\n      description: '',\n      splash_image: '',\n      published: ''\n    };\n  },\n  constructEntityByEvent: function (event) {\n    var item = PortfolioEntity.constructEntity(null);\n    item._id = event.target.id.value;\n    item.title = event.target.title.value;\n    item.client = event.target.client.value;\n    item.description = event.target.description.value;\n\n    //if(item._id.length!=0)\n    //\titem._id = new Mongo.ObjectID(item._id);\n    //else\n    //\titem._id = null;\n\n    return item;\n  }\n};\n\nTemplate.portfolioMaintain.onCreated(function () {\n  var controller = Iron.controller();\n  console.log(controller.params._id);\n  this.subscribe(\"portfolioById\", controller.params._id);\n  //this.subscribe(\"portfolioById\",'123');\n});\n\nTemplate.portfolioMaintain.events({\n  \"submit .portfolio-maintain\": function (event) {\n    // Prevent default browser form submit\n    event.preventDefault();\n\n    var item = PortfolioEntity.constructEntityByEvent(event);\n    if (item._id.length == 0) {\n      console.log('insert');\n    } else {\n      console.log('update');\n\n      //Portfolios.findOne();\n      Portfolios.update(item._id, item);\n    }\n\n    //Portfolios.upsert(item);\n\n    //console.log(Portfolios);\n\n    // Get value from form element\n    //var text = event.target.title.value;\n\n    //console.log(item);\n\n    // Insert a task into the collection\n    /*\n    Tasks.insert({\n      text: text,\n      createdAt: new Date(),            // current time\n      owner: Meteor.userId(),           // _id of logged in user\n      username: Meteor.user().username  // username of logged in user\n     });\n     */\n\n    // Clear form\n    event.target.title.value = \"\";\n  }\n});\n\nTemplate.portfolioMaintain.helpers({\n  item: function () {\n    return PortfolioEntity.constructEntity(Portfolios.findOne());\n  }\n});","ast":null,"map":{"version":3,"sources":["/client/templates/backend/portfolio.js"],"names":[],"mappings":"AAAA,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,YAAY;AAC5C,MAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;CAC7B,CAAC,CAAC;;AAEH,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;AAC9B,YAAU,EAAE,YAAY;;AAEnB,WAAO,UAAU,CAAC,IAAI,EAAE,CAAC;GAC1B;CACJ,CAAC,CAAC;;AAGH,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;AAC1B,wBAAsB,EAAE,YAAY;AAClC,WAAO,UAAU,CAAC,IAAI,EAAE,CAAC;GAC1B;CACJ,CAAC,CAAC;;;;;AAMH,IAAI,eAAe,GAAG;AACrB,iBAAe,EAAG,UAAS,IAAI,EAAC;AAC/B,QAAG,OAAO,IAAI,IAAI,WAAW,IAAI,IAAI,IAAI,IAAI,EAAC;AAC7C,UAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;AACzB,aAAO,IAAI,CAAC;KACZ;AACD,WAAO,EAAE,GAAG,EAAG,EAAE;AACZ,WAAK,EAAE,EAAE;AACT,YAAM,EAAG,EAAE;AACX,iBAAW,EAAG,EAAE;AAChB,kBAAY,EAAG,EAAE;AACjB,eAAS,EAAG,EAAE;KACd,CAAC;GACN;AACD,wBAAsB,EAAG,UAAS,KAAK,EAAC;AACvC,QAAI,IAAI,GAAG,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACjD,QAAI,CAAC,GAAG,GAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;AAC1B,QAAI,CAAC,KAAK,GAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;AACpC,QAAI,CAAC,MAAM,GAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;AACtC,QAAI,CAAC,WAAW,GAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC;;;;;;;AAOhD,WAAO,IAAI,CAAC;GACjB;CACD,CAAC;;AAGF,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,YAAY;AAChD,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAChC,SAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACtC,MAAI,CAAC,SAAS,CAAC,eAAe,EAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;CAEtD,CAAC,CAAC;;AAEH,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAAC;AACjC,8BAA4B,EAAE,UAAU,KAAK,EAAE;;AAE1C,SAAK,CAAC,cAAc,EAAE,CAAC;;AAE3B,QAAI,IAAI,GAAG,eAAe,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;AACzD,QAAG,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,EAAC;AACvB,aAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KACtB,MAAI;AACJ,aAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;;AAGtB,gBAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAG,IAAI,CAAC,CAAC;KACnC;;;;;;;;;;;;;;;;;;;;;;AAyBG,SAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;GAC/B;CACJ,CAAC,CAAC;;AAEH,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC;AAC/B,MAAI,EAAG,YAAY;AAClB,WAAQ,eAAe,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAG;GAChE;CACJ,CAAC,CAAC","file":"/client/templates/backend/portfolio.js.map","sourcesContent":["Template.portfolioList.onCreated(function () {\n\tthis.subscribe('portfolios');\n});\n\nTemplate.portfolioList.helpers({\n\tportfolios: function () {\n\t\t\n      return Portfolios.find();\n    }\n});\n\n\nTemplate.portfolioList.events({\n    \"click .button-update\": function () {\n      return Portfolios.find();\n    }\n});\n\n\n/** PORTFOLIO Maintain*****/\n\n// TODO :: what should i do here ?\nvar PortfolioEntity = {\n\tconstructEntity : function(item){\n\t\tif(typeof item != \"undefined\" && item != null){\n\t\t\titem._id = item._id._str;\n\t\t\treturn item;\n\t\t}\n\t\treturn { _id : '',\n    \t\t\ttitle: '',\n    \t\t\tclient : '',\n    \t\t\tdescription : '',\n    \t\t\tsplash_image : '',\n    \t\t\tpublished : ''\n    \t\t};\n\t},\n\tconstructEntityByEvent : function(event){\n\t\tvar item = PortfolioEntity.constructEntity(null);\n\t\titem._id=event.target.id.value;\n      \titem.title=event.target.title.value;\n      \titem.client=event.target.client.value;\n      \titem.description=event.target.description.value;\n\n      \t//if(item._id.length!=0)\n      \t//\titem._id = new Mongo.ObjectID(item._id);\n      \t//else \n      \t//\titem._id = null;\n\n      \treturn item;\n\t}\n};\n\n\nTemplate.portfolioMaintain.onCreated(function () {\n\tvar controller = Iron.controller();\n    console.log(controller.params._id);\n\tthis.subscribe(\"portfolioById\",controller.params._id);\n\t//this.subscribe(\"portfolioById\",'123');\n});\n\nTemplate.portfolioMaintain.events({\n\t\"submit .portfolio-maintain\": function (event) {\n    \t// Prevent default browser form submit\n     \tevent.preventDefault();\n \t\n\t\tvar item = PortfolioEntity.constructEntityByEvent(event);\n\t\tif(item._id.length == 0){\n\t\t\tconsole.log('insert');\n\t\t}else{\n\t\t\tconsole.log('update');\n\n\t\t\t//Portfolios.findOne();\n\t\t\tPortfolios.update(item._id , item);\n\t\t}\n\n\t\t//Portfolios.upsert(item);\n\n\t\t//console.log(Portfolios);\n\n    \t// Get value from form element\n    \t//var text = event.target.title.value;\n\n\n      //console.log(item);\n \n      // Insert a task into the collection\n      /*\n\t\tTasks.insert({\n        text: text,\n        createdAt: new Date(),            // current time\n        owner: Meteor.userId(),           // _id of logged in user\n        username: Meteor.user().username  // username of logged in user\n\n      });\n\n      */\n \n      // Clear form\n      event.target.title.value = \"\";\n    }\n});\n\nTemplate.portfolioMaintain.helpers({\n    item : function () {\n    \treturn  PortfolioEntity.constructEntity(Portfolios.findOne())  ;\n    }\n});"]},"hash":"9d6ba5ba4a85b94b6447bc726079a323a2de514e"}
