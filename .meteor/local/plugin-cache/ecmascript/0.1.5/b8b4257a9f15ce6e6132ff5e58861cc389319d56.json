{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"// Scroll to the very bottom to see the stuff we wrote, the big giant blocks are:\n// froogaloop\n// and\n// fitvid.js\n\n;(function ($) {\n\n    'use strict';\n\n    $.fn.fitVids = function (options) {\n        var settings = {\n            customSelector: null,\n            ignore: null\n        };\n\n        if (!document.getElementById('fit-vids-style')) {\n            // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n            var head = document.head || document.getElementsByTagName('head')[0];\n            var css = '.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n            var div = document.createElement(\"div\");\n            div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n            head.appendChild(div.childNodes[1]);\n        }\n\n        if (options) {\n            $.extend(settings, options);\n        }\n\n        return this.each(function () {\n            var selectors = ['iframe[src*=\"player.vimeo.com\"]', 'iframe[src*=\"youtube.com\"]', 'iframe[src*=\"youtube-nocookie.com\"]', 'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]', 'object', 'embed'];\n\n            if (settings.customSelector) {\n                selectors.push(settings.customSelector);\n            }\n\n            var ignoreList = '.fitvidsignore';\n\n            if (settings.ignore) {\n                ignoreList = ignoreList + ', ' + settings.ignore;\n            }\n\n            var $allVideos = $(this).find(selectors.join(','));\n            $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n            $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n            $allVideos.each(function (count) {\n                var $this = $(this);\n                if ($this.parents(ignoreList).length > 0) {\n                    return; // Disable FitVids on this video.\n                }\n                if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) {\n                    return;\n                }\n                if (!$this.css('height') && !$this.css('width') && (isNaN($this.attr('height')) || isNaN($this.attr('width')))) {\n                    $this.attr('height', 9);\n                    $this.attr('width', 16);\n                }\n                var height = this.tagName.toLowerCase() === 'object' || $this.attr('height') && !isNaN(parseInt($this.attr('height'), 10)) ? parseInt($this.attr('height'), 10) : $this.height(),\n                    width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n                    aspectRatio = height / width;\n                if (!$this.attr('id')) {\n                    var videoID = 'fitvid' + count;\n                    $this.attr('id', videoID);\n                }\n                $this.wrap('<div class=\"fluid-width-video-wrapper\"></div>').parent('.fluid-width-video-wrapper').css('padding-top', aspectRatio * 100 + '%');\n                $this.removeAttr('height').removeAttr('width');\n            });\n        });\n    };\n    // Works with either jQuery or Zepto\n})(window.jQuery || window.Zepto);\n\n// Init style shamelessly stolen from jQuery http://jquery.com\nvar Froogaloop = (function () {\n    // Define a local copy of Froogaloop\n    function Froogaloop(iframe) {\n        // The Froogaloop object is actually just the init constructor\n        return new Froogaloop.fn.init(iframe);\n    }\n\n    var eventCallbacks = {},\n        hasWindowEvent = false,\n        isReady = false,\n        slice = Array.prototype.slice,\n        playerDomain = '';\n\n    Froogaloop.fn = Froogaloop.prototype = {\n        element: null,\n\n        init: function (iframe) {\n            if (typeof iframe === \"string\") {\n                iframe = document.getElementById(iframe);\n            }\n\n            this.element = iframe;\n            console.log(this.element);\n            // Register message event listeners\n            playerDomain = getDomainFromUrl(this.element.getAttribute('src'));\n\n            return this;\n        },\n\n        /*\n         * Calls a function to act upon the player.\n         *\n         * @param {string} method The name of the Javascript API method to call. Eg: 'play'.\n         * @param {Array|Function} valueOrCallback params Array of parameters to pass when calling an API method\n         *                                or callback function when the method returns a value.\n         */\n        api: function (method, valueOrCallback) {\n            if (!this.element || !method) {\n                return false;\n            }\n\n            var self = this,\n                element = self.element,\n                target_id = element.id !== '' ? element.id : null,\n                params = !isFunction(valueOrCallback) ? valueOrCallback : null,\n                callback = isFunction(valueOrCallback) ? valueOrCallback : null;\n\n            // Store the callback for get functions\n            if (callback) {\n                storeCallback(method, callback, target_id);\n            }\n\n            postMessage(method, params, element);\n            return self;\n        },\n\n        /*\n         * Registers an event listener and a callback function that gets called when the event fires.\n         *\n         * @param eventName (String): Name of the event to listen for.\n         * @param callback (Function): Function that should be called when the event fires.\n         */\n        addEvent: function (eventName, callback) {\n            if (!this.element) {\n                return false;\n            }\n\n            var self = this,\n                element = self.element,\n                target_id = element.id !== '' ? element.id : null;\n\n            storeCallback(eventName, callback, target_id);\n\n            // The ready event is not registered via postMessage. It fires regardless.\n            if (eventName != 'ready') {\n                postMessage('addEventListener', eventName, element);\n            } else if (eventName == 'ready' && isReady) {\n                callback.call(null, target_id);\n            }\n\n            return self;\n        },\n\n        /*\n         * Unregisters an event listener that gets called when the event fires.\n         *\n         * @param eventName (String): Name of the event to stop listening for.\n         */\n        removeEvent: function (eventName) {\n            if (!this.element) {\n                return false;\n            }\n\n            var self = this,\n                element = self.element,\n                target_id = element.id !== '' ? element.id : null,\n                removed = removeCallback(eventName, target_id);\n\n            // The ready event is not registered\n            if (eventName != 'ready' && removed) {\n                postMessage('removeEventListener', eventName, element);\n            }\n        }\n    };\n\n    /**\n     * Handles posting a message to the parent window.\n     *\n     * @param method (String): name of the method to call inside the player. For api calls\n     * this is the name of the api method (api_play or api_pause) while for events this method\n     * is api_addEventListener.\n     * @param params (Object or Array): List of parameters to submit to the method. Can be either\n     * a single param or an array list of parameters.\n     * @param target (HTMLElement): Target iframe to post the message to.\n     */\n    function postMessage(method, params, target) {\n        if (!target.contentWindow.postMessage) {\n            return false;\n        }\n\n        var url = target.getAttribute('src').split('?')[0],\n            data = JSON.stringify({\n            method: method,\n            value: params\n        });\n\n        if (url.substr(0, 2) === '//') {\n            url = window.location.protocol + url;\n        }\n\n        target.contentWindow.postMessage(data, url);\n    }\n\n    /**\n     * Event that fires whenever the window receives a message from its parent\n     * via window.postMessage.\n     */\n    function onMessageReceived(event) {\n        var data, method;\n\n        try {\n            data = JSON.parse(event.data);\n            method = data.event || data.method;\n        } catch (e) {\n            //fail silently... like a ninja!\n        }\n\n        if (method == 'ready' && !isReady) {\n            isReady = true;\n        }\n\n        // Handles messages from moogaloop only\n        if (event.origin != playerDomain) {\n            return false;\n        }\n\n        var value = data.value,\n            eventData = data.data,\n            target_id = target_id === '' ? null : data.player_id,\n            callback = getCallback(method, target_id),\n            params = [];\n\n        if (!callback) {\n            return false;\n        }\n\n        if (value !== undefined) {\n            params.push(value);\n        }\n\n        if (eventData) {\n            params.push(eventData);\n        }\n\n        if (target_id) {\n            params.push(target_id);\n        }\n\n        return params.length > 0 ? callback.apply(null, params) : callback.call();\n    }\n\n    /**\n     * Stores submitted callbacks for each iframe being tracked and each\n     * event for that iframe.\n     *\n     * @param eventName (String): Name of the event. Eg. api_onPlay\n     * @param callback (Function): Function that should get executed when the\n     * event is fired.\n     * @param target_id (String) [Optional]: If handling more than one iframe then\n     * it stores the different callbacks for different iframes based on the iframe's\n     * id.\n     */\n    function storeCallback(eventName, callback, target_id) {\n        if (target_id) {\n            if (!eventCallbacks[target_id]) {\n                eventCallbacks[target_id] = {};\n            }\n            eventCallbacks[target_id][eventName] = callback;\n        } else {\n            eventCallbacks[eventName] = callback;\n        }\n    }\n\n    /**\n     * Retrieves stored callbacks.\n     */\n    function getCallback(eventName, target_id) {\n        if (target_id) {\n            return eventCallbacks[target_id][eventName];\n        } else {\n            return eventCallbacks[eventName];\n        }\n    }\n\n    function removeCallback(eventName, target_id) {\n        if (target_id && eventCallbacks[target_id]) {\n            if (!eventCallbacks[target_id][eventName]) {\n                return false;\n            }\n            eventCallbacks[target_id][eventName] = null;\n        } else {\n            if (!eventCallbacks[eventName]) {\n                return false;\n            }\n            eventCallbacks[eventName] = null;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns a domain's root domain.\n     * Eg. returns http://vimeo.com when http://vimeo.com/channels is sbumitted\n     *\n     * @param url (String): Url to test against.\n     * @return url (String): Root domain of submitted url\n     */\n    function getDomainFromUrl(url) {\n        if (url.substr(0, 2) === '//') {\n            url = window.location.protocol + url;\n        }\n\n        var url_pieces = url.split('/'),\n            domain_str = '';\n\n        for (var i = 0, length = url_pieces.length; i < length; i++) {\n            if (i < 3) {\n                domain_str += url_pieces[i];\n            } else {\n                break;\n            }\n            if (i < 2) {\n                domain_str += '/';\n            }\n        }\n\n        return domain_str;\n    }\n\n    function isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    }\n\n    function isArray(obj) {\n        return toString.call(obj) === '[object Array]';\n    }\n\n    // Give the init function the Froogaloop prototype for later instantiation\n    Froogaloop.fn.init.prototype = Froogaloop.fn;\n\n    // Listens for the message event.\n    // W3C\n    if (window.addEventListener) {\n        window.addEventListener('message', onMessageReceived, false);\n    }\n    // IE\n    else {\n            window.attachEvent('onmessage', onMessageReceived);\n        }\n\n    // Expose froogaloop to the global object\n    return window.Froogaloop = window.$f = Froogaloop;\n})();","ast":null,"map":{"version":3,"sources":["/client/lib/script.js"],"names":[],"mappings":"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","file":"/client/lib/script.js.map","sourcesContent":["// Scroll to the very bottom to see the stuff we wrote, the big giant blocks are:\n// froogaloop\n// and\n// fitvid.js\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(count){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('id')){\n          var videoID = 'fitvid' + count;\n          $this.attr('id', videoID);\n        }\n        $this.wrap('<div class=\"fluid-width-video-wrapper\"></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n\n\n// Init style shamelessly stolen from jQuery http://jquery.com\nvar Froogaloop = (function(){\n    // Define a local copy of Froogaloop\n    function Froogaloop(iframe) {\n        // The Froogaloop object is actually just the init constructor\n        return new Froogaloop.fn.init(iframe);\n    }\n\n    var eventCallbacks = {},\n        hasWindowEvent = false,\n        isReady = false,\n        slice = Array.prototype.slice,\n        playerDomain = '';\n\n    Froogaloop.fn = Froogaloop.prototype = {\n        element: null,\n\n        init: function(iframe) {\n            if (typeof iframe === \"string\") {\n                iframe = document.getElementById(iframe);\n            }\n\n            this.element = iframe;\n            console.log(this.element);\n            // Register message event listeners\n            playerDomain = getDomainFromUrl(this.element.getAttribute('src'));\n\n            return this;\n        },\n\n        /*\n         * Calls a function to act upon the player.\n         *\n         * @param {string} method The name of the Javascript API method to call. Eg: 'play'.\n         * @param {Array|Function} valueOrCallback params Array of parameters to pass when calling an API method\n         *                                or callback function when the method returns a value.\n         */\n        api: function(method, valueOrCallback) {\n            if (!this.element || !method) {\n                return false;\n            }\n\n            var self = this,\n                element = self.element,\n                target_id = element.id !== '' ? element.id : null,\n                params = !isFunction(valueOrCallback) ? valueOrCallback : null,\n                callback = isFunction(valueOrCallback) ? valueOrCallback : null;\n\n            // Store the callback for get functions\n            if (callback) {\n                storeCallback(method, callback, target_id);\n            }\n\n            postMessage(method, params, element);\n            return self;\n        },\n\n        /*\n         * Registers an event listener and a callback function that gets called when the event fires.\n         *\n         * @param eventName (String): Name of the event to listen for.\n         * @param callback (Function): Function that should be called when the event fires.\n         */\n        addEvent: function(eventName, callback) {\n            if (!this.element) {\n                return false;\n            }\n\n            var self = this,\n                element = self.element,\n                target_id = element.id !== '' ? element.id : null;\n\n\n            storeCallback(eventName, callback, target_id);\n\n            // The ready event is not registered via postMessage. It fires regardless.\n            if (eventName != 'ready') {\n                postMessage('addEventListener', eventName, element);\n            }\n            else if (eventName == 'ready' && isReady) {\n                callback.call(null, target_id);\n            }\n\n            return self;\n        },\n\n        /*\n         * Unregisters an event listener that gets called when the event fires.\n         *\n         * @param eventName (String): Name of the event to stop listening for.\n         */\n        removeEvent: function(eventName) {\n            if (!this.element) {\n                return false;\n            }\n\n            var self = this,\n                element = self.element,\n                target_id = element.id !== '' ? element.id : null,\n                removed = removeCallback(eventName, target_id);\n\n            // The ready event is not registered\n            if (eventName != 'ready' && removed) {\n                postMessage('removeEventListener', eventName, element);\n            }\n        }\n    };\n\n    /**\n     * Handles posting a message to the parent window.\n     *\n     * @param method (String): name of the method to call inside the player. For api calls\n     * this is the name of the api method (api_play or api_pause) while for events this method\n     * is api_addEventListener.\n     * @param params (Object or Array): List of parameters to submit to the method. Can be either\n     * a single param or an array list of parameters.\n     * @param target (HTMLElement): Target iframe to post the message to.\n     */\n    function postMessage(method, params, target) {\n        if (!target.contentWindow.postMessage) {\n            return false;\n        }\n\n        var url = target.getAttribute('src').split('?')[0],\n            data = JSON.stringify({\n                method: method,\n                value: params\n            });\n\n        if (url.substr(0, 2) === '//') {\n            url = window.location.protocol + url;\n        }\n\n        target.contentWindow.postMessage(data, url);\n    }\n\n    /**\n     * Event that fires whenever the window receives a message from its parent\n     * via window.postMessage.\n     */\n    function onMessageReceived(event) {\n        var data, method;\n\n        try {\n            data = JSON.parse(event.data);\n            method = data.event || data.method;\n        }\n        catch(e)  {\n            //fail silently... like a ninja!\n        }\n\n        if (method == 'ready' && !isReady) {\n            isReady = true;\n        }\n\n        // Handles messages from moogaloop only\n        if (event.origin != playerDomain) {\n            return false;\n        }\n\n        var value = data.value,\n            eventData = data.data,\n            target_id = target_id === '' ? null : data.player_id,\n\n            callback = getCallback(method, target_id),\n            params = [];\n\n        if (!callback) {\n            return false;\n        }\n\n        if (value !== undefined) {\n            params.push(value);\n        }\n\n        if (eventData) {\n            params.push(eventData);\n        }\n\n        if (target_id) {\n            params.push(target_id);\n        }\n\n        return params.length > 0 ? callback.apply(null, params) : callback.call();\n    }\n\n\n    /**\n     * Stores submitted callbacks for each iframe being tracked and each\n     * event for that iframe.\n     *\n     * @param eventName (String): Name of the event. Eg. api_onPlay\n     * @param callback (Function): Function that should get executed when the\n     * event is fired.\n     * @param target_id (String) [Optional]: If handling more than one iframe then\n     * it stores the different callbacks for different iframes based on the iframe's\n     * id.\n     */\n    function storeCallback(eventName, callback, target_id) {\n        if (target_id) {\n            if (!eventCallbacks[target_id]) {\n                eventCallbacks[target_id] = {};\n            }\n            eventCallbacks[target_id][eventName] = callback;\n        }\n        else {\n            eventCallbacks[eventName] = callback;\n        }\n    }\n\n    /**\n     * Retrieves stored callbacks.\n     */\n    function getCallback(eventName, target_id) {\n        if (target_id) {\n            return eventCallbacks[target_id][eventName];\n        }\n        else {\n            return eventCallbacks[eventName];\n        }\n    }\n\n    function removeCallback(eventName, target_id) {\n        if (target_id && eventCallbacks[target_id]) {\n            if (!eventCallbacks[target_id][eventName]) {\n                return false;\n            }\n            eventCallbacks[target_id][eventName] = null;\n        }\n        else {\n            if (!eventCallbacks[eventName]) {\n                return false;\n            }\n            eventCallbacks[eventName] = null;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns a domain's root domain.\n     * Eg. returns http://vimeo.com when http://vimeo.com/channels is sbumitted\n     *\n     * @param url (String): Url to test against.\n     * @return url (String): Root domain of submitted url\n     */\n    function getDomainFromUrl(url) {\n        if (url.substr(0, 2) === '//') {\n            url = window.location.protocol + url;\n        }\n\n        var url_pieces = url.split('/'),\n            domain_str = '';\n\n        for(var i = 0, length = url_pieces.length; i < length; i++) {\n            if(i<3) {domain_str += url_pieces[i];}\n            else {break;}\n            if(i<2) {domain_str += '/';}\n        }\n\n        return domain_str;\n    }\n\n    function isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    }\n\n    function isArray(obj) {\n        return toString.call(obj) === '[object Array]';\n    }\n\n    // Give the init function the Froogaloop prototype for later instantiation\n    Froogaloop.fn.init.prototype = Froogaloop.fn;\n\n    // Listens for the message event.\n    // W3C\n    if (window.addEventListener) {\n        window.addEventListener('message', onMessageReceived, false);\n    }\n    // IE\n    else {\n        window.attachEvent('onmessage', onMessageReceived);\n    }\n\n    // Expose froogaloop to the global object\n    return (window.Froogaloop = window.$f = Froogaloop);\n\n})();\n\n\n\n\n\n\n\n"]},"hash":"b8b4257a9f15ce6e6132ff5e58861cc389319d56"}
